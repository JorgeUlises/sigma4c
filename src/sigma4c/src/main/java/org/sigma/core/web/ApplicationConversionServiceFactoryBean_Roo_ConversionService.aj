// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.sigma.core.web;

import org.apache.commons.codec.binary.Base64;
import org.sigma.core.domain.Empresa;
import org.sigma.core.domain.FuenteHidrica;
import org.sigma.core.domain.ManyMuestraHasManyParametro;
import org.sigma.core.domain.ManyMuestraHasManyParametroPK;
import org.sigma.core.domain.Muestra;
import org.sigma.core.domain.Parametro;
import org.sigma.core.domain.Proyecto;
import org.sigma.core.domain.Rol;
import org.sigma.core.domain.SpatialRefSys;
import org.sigma.core.domain.Usuario;
import org.sigma.core.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Empresa, String> ApplicationConversionServiceFactoryBean.getEmpresaToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.sigma.core.domain.Empresa, java.lang.String>() {
            public String convert(Empresa empresa) {
                return new StringBuilder().append(empresa.getTipoempresa()).append(' ').append(empresa.getNombre()).append(' ').append(empresa.getRepresentantelegal()).append(' ').append(empresa.getRut()).toString();
            }
        };
    }
    
    public Converter<String, Empresa> ApplicationConversionServiceFactoryBean.getStringToEmpresaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.sigma.core.domain.Empresa>() {
            public org.sigma.core.domain.Empresa convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Empresa.class);
            }
        };
    }
    
    public Converter<FuenteHidrica, String> ApplicationConversionServiceFactoryBean.getFuenteHidricaToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.sigma.core.domain.FuenteHidrica, java.lang.String>() {
            public String convert(FuenteHidrica fuenteHidrica) {
                return new StringBuilder().append(fuenteHidrica.getGeometria()).append(' ').append(fuenteHidrica.getNombre()).toString();
            }
        };
    }
    
    public Converter<String, FuenteHidrica> ApplicationConversionServiceFactoryBean.getStringToFuenteHidricaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.sigma.core.domain.FuenteHidrica>() {
            public org.sigma.core.domain.FuenteHidrica convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), FuenteHidrica.class);
            }
        };
    }
    
    public Converter<ManyMuestraHasManyParametro, String> ApplicationConversionServiceFactoryBean.getManyMuestraHasManyParametroToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.sigma.core.domain.ManyMuestraHasManyParametro, java.lang.String>() {
            public String convert(ManyMuestraHasManyParametro manyMuestraHasManyParametro) {
                return new StringBuilder().append(manyMuestraHasManyParametro.getConcentracion()).append(' ').append(manyMuestraHasManyParametro.getTecAnalitic()).toString();
            }
        };
    }
    
    public Converter<String, ManyMuestraHasManyParametro> ApplicationConversionServiceFactoryBean.getStringToManyMuestraHasManyParametroConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.sigma.core.domain.ManyMuestraHasManyParametro>() {
            public org.sigma.core.domain.ManyMuestraHasManyParametro convert(String id) {
                return getObject().convert(getObject().convert(id, ManyMuestraHasManyParametroPK.class), ManyMuestraHasManyParametro.class);
            }
        };
    }
    
    public Converter<Muestra, String> ApplicationConversionServiceFactoryBean.getMuestraToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.sigma.core.domain.Muestra, java.lang.String>() {
            public String convert(Muestra muestra) {
                return new StringBuilder().append(muestra.getResponsable()).append(' ').append(muestra.getProducto()).append(' ').append(muestra.getLugarToma()).append(' ').append(muestra.getFoto()).toString();
            }
        };
    }
    
    public Converter<String, Muestra> ApplicationConversionServiceFactoryBean.getStringToMuestraConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.sigma.core.domain.Muestra>() {
            public org.sigma.core.domain.Muestra convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Muestra.class);
            }
        };
    }
    
    public Converter<Parametro, String> ApplicationConversionServiceFactoryBean.getParametroToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.sigma.core.domain.Parametro, java.lang.String>() {
            public String convert(Parametro parametro) {
                return new StringBuilder().append(parametro.getNombre()).append(' ').append(parametro.getUnidad()).append(' ').append(parametro.getConcentracion()).append(' ').append(parametro.getTecAnalitic()).toString();
            }
        };
    }
    
    public Converter<String, Parametro> ApplicationConversionServiceFactoryBean.getStringToParametroConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.sigma.core.domain.Parametro>() {
            public org.sigma.core.domain.Parametro convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Parametro.class);
            }
        };
    }
    
    public Converter<Proyecto, String> ApplicationConversionServiceFactoryBean.getProyectoToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.sigma.core.domain.Proyecto, java.lang.String>() {
            public String convert(Proyecto proyecto) {
                return new StringBuilder().append(proyecto.getInvolucrados()).append(' ').append(proyecto.getNombre()).append(' ').append(proyecto.getEncargado()).toString();
            }
        };
    }
    
    public Converter<String, Proyecto> ApplicationConversionServiceFactoryBean.getStringToProyectoConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.sigma.core.domain.Proyecto>() {
            public org.sigma.core.domain.Proyecto convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Proyecto.class);
            }
        };
    }
    
    public Converter<Rol, String> ApplicationConversionServiceFactoryBean.getRolToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.sigma.core.domain.Rol, java.lang.String>() {
            public String convert(Rol rol) {
                return new StringBuilder().append(rol.getNombre()).toString();
            }
        };
    }
    
    public Converter<String, Rol> ApplicationConversionServiceFactoryBean.getStringToRolConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.sigma.core.domain.Rol>() {
            public org.sigma.core.domain.Rol convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Rol.class);
            }
        };
    }
    
    public Converter<SpatialRefSys, String> ApplicationConversionServiceFactoryBean.getSpatialRefSysToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.sigma.core.domain.SpatialRefSys, java.lang.String>() {
            public String convert(SpatialRefSys spatialRefSys) {
                return new StringBuilder().append(spatialRefSys.getAuthName()).append(' ').append(spatialRefSys.getAuthSrid()).append(' ').append(spatialRefSys.getSrtext()).append(' ').append(spatialRefSys.getProj4text()).toString();
            }
        };
    }
    
    public Converter<String, SpatialRefSys> ApplicationConversionServiceFactoryBean.getStringToSpatialRefSysConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.sigma.core.domain.SpatialRefSys>() {
            public org.sigma.core.domain.SpatialRefSys convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), SpatialRefSys.class);
            }
        };
    }
    
    public Converter<Usuario, String> ApplicationConversionServiceFactoryBean.getUsuarioToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.sigma.core.domain.Usuario, java.lang.String>() {
            public String convert(Usuario usuario) {
                return new StringBuilder().append(usuario.getAlias()).append(' ').append(usuario.getMail()).append(' ').append(usuario.getNombre()).toString();
            }
        };
    }
    
    public Converter<String, Usuario> ApplicationConversionServiceFactoryBean.getStringToUsuarioConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.sigma.core.domain.Usuario>() {
            public org.sigma.core.domain.Usuario convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Usuario.class);
            }
        };
    }
    
    public Converter<String, ManyMuestraHasManyParametroPK> ApplicationConversionServiceFactoryBean.getJsonToManyMuestraHasManyParametroPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.sigma.core.domain.ManyMuestraHasManyParametroPK>() {
            public ManyMuestraHasManyParametroPK convert(String encodedJson) {
                return ManyMuestraHasManyParametroPK.fromJsonToManyMuestraHasManyParametroPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<ManyMuestraHasManyParametroPK, String> ApplicationConversionServiceFactoryBean.getManyMuestraHasManyParametroPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<org.sigma.core.domain.ManyMuestraHasManyParametroPK, java.lang.String>() {
            public String convert(ManyMuestraHasManyParametroPK manyMuestraHasManyParametroPK) {
                return Base64.encodeBase64URLSafeString(manyMuestraHasManyParametroPK.toJson().getBytes());
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getEmpresaToStringConverter());
        registry.addConverter(getStringToEmpresaConverter());
        registry.addConverter(getFuenteHidricaToStringConverter());
        registry.addConverter(getStringToFuenteHidricaConverter());
        registry.addConverter(getManyMuestraHasManyParametroToStringConverter());
        registry.addConverter(getStringToManyMuestraHasManyParametroConverter());
        registry.addConverter(getMuestraToStringConverter());
        registry.addConverter(getStringToMuestraConverter());
        registry.addConverter(getParametroToStringConverter());
        registry.addConverter(getStringToParametroConverter());
        registry.addConverter(getProyectoToStringConverter());
        registry.addConverter(getStringToProyectoConverter());
        registry.addConverter(getRolToStringConverter());
        registry.addConverter(getStringToRolConverter());
        registry.addConverter(getSpatialRefSysToStringConverter());
        registry.addConverter(getStringToSpatialRefSysConverter());
        registry.addConverter(getUsuarioToStringConverter());
        registry.addConverter(getStringToUsuarioConverter());
        registry.addConverter(getJsonToManyMuestraHasManyParametroPKConverter());
        registry.addConverter(getManyMuestraHasManyParametroPKToJsonConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
